{"version":3,"sources":["components/Portfolio.js","components/Login.js","components/ModalStocks.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayPortfolio","_ref","handleDetailsClick","setShowModal","portfolioData","setPortfolioData","useState","searchResults","setSearchResults","userId","localStorage","getItem","useEffect","async","response","fetch","concat","ok","Error","data","json","error","console","fetchPortfolio","React","createElement","onClick","handleLogout","setItem","removeItem","window","location","href","type","placeholder","onChange","symbol","event","target","value","bestMatches","length","map","result","index","key","item","quantity","Login","onLogin","user_name","setUsername","password","setPassword","navigate","useNavigate","onSubmit","preventDefault","method","headers","body","JSON","stringify","loginResponse","user_id","alert","message","e","required","ModalStocks","postStock","show","portfolio","ticker","setTicker","setQuantity","loading","setLoading","Modal","onHide","Header","closeButton","Title","Form","stockData","toUpperCase","Number","success","log","Body","Group","className","controlId","Label","Control","disabled","Footer","Button","variant","App","loggedIn","setLoggedIn","setUserId","setData","showModal","fetchUrl","fetchData","useCallback","jsonData","Routes","Route","path","element","Navigate","replace","to","credentials","Portfolio","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.6e6e2228.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction DisplayPortfolio({ handleDetailsClick, setShowModal }) {\n  const [portfolioData, setPortfolioData] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const userId = localStorage.getItem('userId');\n\n  // Function to handle logout\n  const handleLogout = () => {\n    localStorage.setItem('isLoggedIn', 'false');\n    localStorage.removeItem('userId');\n    // Redirect to login or home page after logout\n    window.location.href = '/';\n  };\n\n  // Function to search for a stock symbol\n  const handleSearch = async (event) => {\n    const symbol = event.target.value;\n    if (symbol) {\n      const response = await fetch(`https://mcsbt-capstone-sara.ew.r.appspot.com/search/${symbol}`);\n      const data = await response.json();\n      setSearchResults(data.bestMatches);\n    }\n  };\n\n  // Fetch portfolio data from the backend\n  useEffect(() => {\n    async function fetchPortfolio() {\n      if (userId) {\n        try {\n          const response = await fetch(`https://mcsbt-capstone-sara.ew.r.appspot.com/portfolio/${userId}`);\n          if (!response.ok) throw new Error('Failed to fetch');\n          const data = await response.json();\n          setPortfolioData(data);\n        } catch (error) {\n          console.error('Error fetching portfolio data:', error);\n        }\n      }\n    }\n    fetchPortfolio();\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>My Portfolio</h2>\n      <button onClick={handleLogout}>Logout</button>\n      <input type=\"text\" placeholder=\"Search Symbol\" onChange={handleSearch} />\n      {searchResults && searchResults.length > 0 && (\n        <div>\n          {searchResults.map((result, index) => (\n            <div key={index}>\n              Symbol: {result['1. symbol']}\n              <button onClick={() => handleDetailsClick(result['1. symbol'])}>View Details</button>\n            </div>\n          ))}\n        </div>\n      )}\n      {portfolioData.length > 0 ? (\n        <ul>\n          {portfolioData.map((item, index) => (\n            <li key={index}>\n              Symbol: {item.symbol}, Quantity: {item.quantity}\n              <button onClick={() => handleDetailsClick(item.symbol)}>View Details</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Your portfolio is empty.</p>\n      )}\n      <button onClick={() => setShowModal(true)}>Add/Update Stocks</button>\n    </div>\n  );\n}\n\nexport default DisplayPortfolio;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login({ onLogin }) {\n  const [user_name, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('https://mcsbt-capstone-sara.ew.r.appspot.com/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ user_name, password }),\n      });\n\n      const loginResponse = await response.json();\n\n      if (response.ok && loginResponse.user_id) {\n        onLogin(true);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userId', loginResponse.user_id);\n        navigate('/portfolio');\n      } else {\n        alert('Login failed: ' + (loginResponse.error || 'Unknown error'));\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('Login failed: ' + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={user_name}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","// This is was a suggestion from ChatGPT for the implementation of the project\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nfunction ModalStocks({ postStock, setShowModal, show, portfolio }) {\n  const [ticker, setTicker] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Prepare the stock data to be sent\n    const stockData = {\n      ticker: ticker.toUpperCase(),\n      quantity: Number(quantity),\n    };\n\n    try {\n      // Call the function passed as prop to post the stock data\n      const response = await postStock(stockData);\n      \n      if (response.success) {\n        // If the stock was successfully added/updated\n        console.log(\"Stock successfully updated.\");\n      } else {\n        console.error(\"Failed to update the stock:\", response.message);\n      }\n    } catch (error) {\n      console.error(\"Error updating the stock:\", error);\n    } finally {\n      setLoading(false);\n      setShowModal(false); // Hide the modal after submitting\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={() => setShowModal(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add or Update Stock</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicTicker\">\n            <Form.Label>Ticker Symbol</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter ticker\"\n              value={ticker}\n              onChange={(e) => setTicker(e.target.value)}\n              disabled={loading}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicQuantity\">\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Enter quantity\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n              disabled={loading}\n              required\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)} disabled={loading}>\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n            {loading ? \"Submitting...\" : \"Submit\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default ModalStocks;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Portfolio from './components/Portfolio';\nimport Login from './components/Login';\nimport ModalStocks from './components/ModalStocks';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n  const [userId, setUserId] = useState(localStorage.getItem('userId') || '');\n  const [data, setData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const fetchUrl = 'https://mcsbt-capstone-sara.ew.r.appspot.com/';\n\n  const fetchData = useCallback(async () => {\n    if (!userId) return;\n    try {\n      const response = await fetch(`${fetchUrl}/portfolio/${userId}`);\n      if (!response.ok) throw new Error('Failed to fetch');\n      const jsonData = await response.json();\n      setData(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }, [userId, fetchUrl]); \n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await fetch(`${fetchUrl}/user/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(credentials),\n      });\n      if (!response.ok) throw new Error('Failed to login');\n      const jsonData = await response.json();\n      if (jsonData.message === \"Login successful\") {\n        setLoggedIn(true);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userId', jsonData.user_id);\n        setUserId(jsonData.user_id);\n        fetchData();\n      } else {\n        console.error('Login failed:', jsonData.error);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('userId');\n    setUserId('');\n    setData([]);\n  };\n\n  const postStock = async (stockData) => {\n    try {\n      const response = await fetch(`https://mcsbt-capstone-sara.ew.r.appspot.com/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...stockData, // Spread the stock data into the request body\n          userId: userId, \n        }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to post stock data');\n      }\n      const jsonData = await response.json();\n      if (jsonData.success) {\n        // If the stock was added or updated successfully, you might want to:\n        // 1. Close the modal\n        setShowModal(false);\n        // 2. Fetch the updated portfolio data\n        fetchData();\n      } else {\n        // Handle any errors returned by the server\n        console.error('Failed to post stock data:', jsonData.message);\n      }\n    } catch (error) {\n      console.error('Error posting stock data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetchData();\n    }\n  }, [loggedIn, userId, fetchData]); \n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={loggedIn ? <Navigate replace to=\"/portfolio\" /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/portfolio\" element={loggedIn ? <Portfolio data={data} /> : <Navigate replace to=\"/\" />} />\n        {/* Additional routes can be added here */}\n      </Routes>\n      {loggedIn && (\n        <>\n          <button onClick={() => setShowModal(true)}>Manage Stocks</button>\n          <button onClick={handleLogout}>Logout</button>\n          {showModal && <ModalStocks postStock={postStock} setShowModal={setShowModal} />}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}