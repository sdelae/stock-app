{"version":3,"sources":["App.js","index.js"],"names":["App","stocks","setStocks","useState","useEffect","fetch","then","response","json","data","orderedData","map","stock","ticker","open","high","low","volume","latest_close","change","change_percent","catch","error","console","React","createElement","index","key","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA0CeA,MAxCf,WACI,MAAOC,EAAQC,GAAaC,mBAAS,IAqBrC,OAnBAC,oBAAU,KACNC,MAAM,KACDC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IACF,MAAMC,EAAcD,EAAKE,IAAIC,GAAU,CACnC,CAAC,SAAUA,EAAMC,QACjB,CAAC,OAAQD,EAAME,MACf,CAAC,OAAQF,EAAMG,MACf,CAAC,MAAOH,EAAMI,KACd,CAAC,SAAUJ,EAAMK,QACjB,CAAC,eAAgBL,EAAMM,cACvB,CAAC,SAAUN,EAAMO,QACjB,CAAC,iBAAkBP,EAAMQ,kBAE7BlB,EAAUQ,KAEbW,MAAMC,GAASC,QAAQD,MAAM,SAAUA,KAC7C,IAGCE,IAAAC,cAAA,WACKxB,EAAOU,IAAI,CAACC,EAAOc,IACpBF,IAAAC,cAAA,OAAKE,IAAKD,GACNF,IAAAC,cAAA,UAAKb,EAAM,GAAG,IACdY,IAAAC,cAAA,SAAG,eAAab,EAAM,GAAG,IACzBY,IAAAC,cAAA,SAAG,eAAab,EAAM,GAAG,IACzBY,IAAAC,cAAA,SAAG,cAAYb,EAAM,GAAG,IACxBY,IAAAC,cAAA,SAAG,WAASb,EAAM,GAAG,IACrBY,IAAAC,cAAA,SAAG,iBAAeb,EAAM,GAAG,IAC3BY,IAAAC,cAAA,SAAG,WAASb,EAAM,GAAG,IACrBY,IAAAC,cAAA,SAAG,mBAAiBb,EAAM,GAAG,QC7BhCgB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHR,IAAAC,cAACD,IAAMS,WAAU,KACfT,IAAAC,cAACzB,EAAG","file":"static/js/main.ddfce76c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n    const [stocks, setStocks] = useState([]);\n\n    useEffect(() => {\n        fetch('/')\n            .then(response => response.json())\n            .then(data => {\n                const orderedData = data.map(stock => ([\n                    ['ticker', stock.ticker],\n                    ['open', stock.open],\n                    ['high', stock.high],\n                    ['low', stock.low],\n                    ['volume', stock.volume],\n                    ['latest_close', stock.latest_close],\n                    ['change', stock.change],\n                    ['change_percent', stock.change_percent],\n                ]));\n                setStocks(orderedData);\n            })\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    return (\n        <div>\n            {stocks.map((stock, index) => (\n            <div key={index}>\n                <h2>{stock[0][1]}</h2>\n                <p>Open Price: {stock[1][1]}</p>\n                <p>High Price: {stock[2][1]}</p>\n                <p>Low Price: {stock[3][1]}</p>\n                <p>Volume: {stock[4][1]}</p>\n                <p>Latest Close: {stock[5][1]}</p>\n                <p>Change: {stock[6][1]}</p>\n                <p>Change Percent: {stock[7][1]}</p>\n            </div>\n            ))}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}